{"id":"../../api/node_modules/apollo-graphql/dist/signature.js","dependencies":[{"name":"/home/mauricio/Documents/programming/javascript/js_everywhere/notedly/api/node_modules/apollo-graphql/dist/signature.js.map","includedInParent":true,"mtime":1610085762887},{"name":"/home/mauricio/Documents/programming/javascript/js_everywhere/notedly/api/node_modules/apollo-graphql/src/signature.ts","includedInParent":true,"mtime":1610085762887},{"name":"/home/mauricio/Documents/programming/javascript/js_everywhere/notedly/web/package.json","includedInParent":true,"mtime":1610226516384},{"name":"/home/mauricio/Documents/programming/javascript/js_everywhere/notedly/web/.babelrc","includedInParent":true,"mtime":1610226364784},{"name":"/home/mauricio/Documents/programming/javascript/js_everywhere/notedly/api/node_modules/apollo-graphql/package.json","includedInParent":true,"mtime":1610085762884},{"name":"./transforms","loc":{"line":3,"column":29},"parent":"/home/mauricio/Documents/programming/javascript/js_everywhere/notedly/api/node_modules/apollo-graphql/dist/signature.js","resolved":"/home/mauricio/Documents/programming/javascript/js_everywhere/notedly/api/node_modules/apollo-graphql/dist/transforms.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar transforms_1 = require(\"./transforms\");\n\nfunction defaultEngineReportingSignature(ast, operationName) {\n  return transforms_1.printWithReducedWhitespace(transforms_1.sortAST(transforms_1.removeAliases(transforms_1.hideLiterals(transforms_1.dropUnusedDefinitions(ast, operationName)))));\n}\n\nexports.defaultEngineReportingSignature = defaultEngineReportingSignature;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/signature.ts","name":null,"original":{"line":48,"column":0},"generated":{"line":7,"column":0}},{"source":"../src/signature.ts","name":null,"original":{"line":48,"column":0},"generated":{"line":7,"column":4}},{"source":"../src/signature.ts","name":null,"original":{"line":48,"column":0},"generated":{"line":7,"column":16}},{"source":"../src/signature.ts","name":null,"original":{"line":48,"column":0},"generated":{"line":7,"column":19}},{"source":"../src/signature.ts","name":null,"original":{"line":48,"column":0},"generated":{"line":7,"column":26}},{"source":"../src/signature.ts","name":null,"original":{"line":48,"column":0},"generated":{"line":7,"column":27}},{"source":"../src/signature.ts","name":null,"original":{"line":48,"column":0},"generated":{"line":7,"column":41}},{"source":"../src/signature.ts","name":null,"original":{"line":48,"column":0},"generated":{"line":7,"column":42}},{"source":"../src/signature.ts","name":null,"original":{"line":59,"column":0},"generated":{"line":9,"column":0}},{"source":"../src/signature.ts","name":null,"original":{"line":59,"column":16},"generated":{"line":9,"column":9}},{"source":"../src/signature.ts","name":null,"original":{"line":59,"column":0},"generated":{"line":9,"column":40}},{"source":"../src/signature.ts","name":null,"original":{"line":60,"column":2},"generated":{"line":9,"column":41}},{"source":"../src/signature.ts","name":null,"original":{"line":59,"column":0},"generated":{"line":9,"column":44}},{"source":"../src/signature.ts","name":null,"original":{"line":61,"column":2},"generated":{"line":9,"column":46}},{"source":"../src/signature.ts","name":null,"original":{"line":59,"column":0},"generated":{"line":9,"column":59}},{"source":"../src/signature.ts","name":null,"original":{"line":61,"column":23},"generated":{"line":9,"column":61}},{"source":"../src/signature.ts","name":null,"original":{"line":63,"column":2},"generated":{"line":10,"column":0}},{"source":"../src/signature.ts","name":null,"original":{"line":63,"column":9},"generated":{"line":10,"column":9}},{"source":"../src/signature.ts","name":null,"original":{"line":63,"column":9},"generated":{"line":10,"column":21}},{"source":"../src/signature.ts","name":null,"original":{"line":63,"column":9},"generated":{"line":10,"column":22}},{"source":"../src/signature.ts","name":null,"original":{"line":63,"column":9},"generated":{"line":10,"column":48}},{"source":"../src/signature.ts","name":null,"original":{"line":64,"column":4},"generated":{"line":10,"column":49}},{"source":"../src/signature.ts","name":null,"original":{"line":64,"column":4},"generated":{"line":10,"column":61}},{"source":"../src/signature.ts","name":null,"original":{"line":64,"column":4},"generated":{"line":10,"column":62}},{"source":"../src/signature.ts","name":null,"original":{"line":64,"column":4},"generated":{"line":10,"column":69}},{"source":"../src/signature.ts","name":null,"original":{"line":65,"column":6},"generated":{"line":10,"column":70}},{"source":"../src/signature.ts","name":null,"original":{"line":65,"column":6},"generated":{"line":10,"column":82}},{"source":"../src/signature.ts","name":null,"original":{"line":65,"column":6},"generated":{"line":10,"column":83}},{"source":"../src/signature.ts","name":null,"original":{"line":65,"column":6},"generated":{"line":10,"column":96}},{"source":"../src/signature.ts","name":null,"original":{"line":65,"column":20},"generated":{"line":10,"column":97}},{"source":"../src/signature.ts","name":null,"original":{"line":65,"column":20},"generated":{"line":10,"column":109}},{"source":"../src/signature.ts","name":null,"original":{"line":65,"column":20},"generated":{"line":10,"column":110}},{"source":"../src/signature.ts","name":null,"original":{"line":65,"column":20},"generated":{"line":10,"column":122}},{"source":"../src/signature.ts","name":null,"original":{"line":65,"column":33},"generated":{"line":10,"column":123}},{"source":"../src/signature.ts","name":null,"original":{"line":65,"column":33},"generated":{"line":10,"column":135}},{"source":"../src/signature.ts","name":null,"original":{"line":65,"column":33},"generated":{"line":10,"column":136}},{"source":"../src/signature.ts","name":null,"original":{"line":65,"column":33},"generated":{"line":10,"column":157}},{"source":"../src/signature.ts","name":null,"original":{"line":65,"column":55},"generated":{"line":10,"column":158}},{"source":"../src/signature.ts","name":null,"original":{"line":65,"column":33},"generated":{"line":10,"column":161}},{"source":"../src/signature.ts","name":null,"original":{"line":65,"column":60},"generated":{"line":10,"column":163}},{"source":"../src/signature.ts","name":null,"original":{"line":65,"column":33},"generated":{"line":10,"column":176}},{"source":"../src/signature.ts","name":null,"original":{"line":65,"column":20},"generated":{"line":10,"column":177}},{"source":"../src/signature.ts","name":null,"original":{"line":65,"column":6},"generated":{"line":10,"column":178}},{"source":"../src/signature.ts","name":null,"original":{"line":64,"column":4},"generated":{"line":10,"column":179}},{"source":"../src/signature.ts","name":null,"original":{"line":63,"column":9},"generated":{"line":10,"column":180}},{"source":"../src/signature.ts","name":null,"original":{"line":63,"column":2},"generated":{"line":10,"column":181}},{"source":"../src/signature.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":11,"column":0}},{"source":"../src/signature.ts","name":null,"original":{"line":59,"column":0},"generated":{"line":13,"column":0}},{"source":"../src/signature.ts","name":null,"original":{"line":59,"column":0},"generated":{"line":13,"column":7}},{"source":"../src/signature.ts","name":null,"original":{"line":59,"column":0},"generated":{"line":13,"column":8}},{"source":"../src/signature.ts","name":null,"original":{"line":59,"column":0},"generated":{"line":13,"column":39}},{"source":"../src/signature.ts","name":null,"original":{"line":59,"column":0},"generated":{"line":13,"column":42}},{"source":"../src/signature.ts","name":null,"original":{"line":59,"column":0},"generated":{"line":13,"column":73}}],"sources":{"../src/signature.ts":"// In Engine, we want to group requests making the same query together, and\n// treat different queries distinctly. But what does it mean for two queries to\n// be \"the same\"?  And what if you don't want to send the full text of the query\n// to Apollo Engine's servers, either because it contains sensitive data or\n// because it contains extraneous operations or fragments?\n//\n// To solve these problems, EngineReportingAgent has the concept of\n// \"signatures\". We don't (by default) send the full query string of queries to\n// the Engine servers. Instead, each trace has its query string's \"signature\".\n//\n// You can specify any function mapping a GraphQL query AST (DocumentNode) to\n// string as your signature algorithm by providing it as the 'signature' option\n// to the EngineReportingAgent constructor. Ideally, your signature should be a\n// valid GraphQL query, though as of now the Engine servers do not re-parse your\n// signature and do not expect it to match the execution tree in the trace.\n//\n// This module utilizes several AST transformations from the adjacent\n// 'transforms' module (which are also for writing your own signature method).\n\n// - dropUnusedDefinitions, which removes operations and fragments that\n//   aren't going to be used in execution\n// - hideLiterals, which replaces all numeric and string literals as well\n//   as list and object input values with \"empty\" values\n// - removeAliases, which removes field aliasing from the query\n// - sortAST, which sorts the children of most multi-child nodes\n//   consistently\n// - printWithReducedWhitespace, a variant on graphql-js's 'print'\n//   which gets rid of unneeded whitespace\n//\n// defaultSignature consists of applying all of these building blocks.\n//\n// Historical note: the default signature algorithm of the Go engineproxy\n// performed all of the above operations, and the Engine servers then re-ran a\n// mostly identical signature implementation on received traces. This was\n// primarily to deal with edge cases where some users used literal interpolation\n// instead of GraphQL variables, included randomized alias names, etc. In\n// addition, the servers relied on the fact that dropUnusedDefinitions had been\n// called in order (and that the signature could be parsed as GraphQL) to\n// extract the name of the operation for display. This caused confusion, as the\n// query document shown in the Engine UI wasn't the same as the one actually\n// sent. apollo-engine-reporting uses a new reporting API which requires it to\n// explicitly include the operation name with each signature; this means that\n// the server no longer needs to parse the signature or run its own signature\n// algorithm on it, and the details of the signature algorithm are now up to the\n// reporting agent.\n\nimport { DocumentNode } from 'graphql';\nimport {\n  printWithReducedWhitespace,\n  dropUnusedDefinitions,\n  removeAliases,\n  sortAST,\n  hideLiterals,\n} from './transforms';\n\n// The default signature function consists of removing unused definitions\n// and whitespace.\n// XXX consider caching somehow\nexport function defaultEngineReportingSignature(\n  ast: DocumentNode,\n  operationName: string,\n): string {\n  return printWithReducedWhitespace(\n    sortAST(\n      removeAliases(hideLiterals(dropUnusedDefinitions(ast, operationName))),\n    ),\n  );\n}\n"},"lineCount":null}},"error":null,"hash":"d541b8381ef615debb316618d2996335","cacheData":{"env":{}}}