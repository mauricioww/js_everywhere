{"id":"../../api/node_modules/protobufjs/src/roots.js","dependencies":[{"name":"/home/mauricio/Documents/programming/javascript/js_everywhere/notedly/web/package.json","includedInParent":true,"mtime":1610226516384},{"name":"/home/mauricio/Documents/programming/javascript/js_everywhere/notedly/web/.babelrc","includedInParent":true,"mtime":1610226364784},{"name":"/home/mauricio/Documents/programming/javascript/js_everywhere/notedly/api/node_modules/protobufjs/package.json","includedInParent":true,"mtime":1610085763141}],"generated":{"js":"\"use strict\";\r\nmodule.exports = {};\r\n\r\n/**\r\n * Named roots.\r\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\r\n * Can also be used manually to make roots available accross modules.\r\n * @name roots\r\n * @type {Object.<string,Root>}\r\n * @example\r\n * // pbjs -r myroot -o compiled.js ...\r\n *\r\n * // in another module:\r\n * require(\"./compiled.js\");\r\n *\r\n * // in any subsequent module:\r\n * var root = protobuf.roots[\"myroot\"];\r\n */\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../api/node_modules/protobufjs/src/roots.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../api/node_modules/protobufjs/src/roots.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../api/node_modules/protobufjs/src/roots.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../api/node_modules/protobufjs/src/roots.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../api/node_modules/protobufjs/src/roots.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../api/node_modules/protobufjs/src/roots.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../api/node_modules/protobufjs/src/roots.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../api/node_modules/protobufjs/src/roots.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../api/node_modules/protobufjs/src/roots.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../api/node_modules/protobufjs/src/roots.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../api/node_modules/protobufjs/src/roots.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../api/node_modules/protobufjs/src/roots.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../api/node_modules/protobufjs/src/roots.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../api/node_modules/protobufjs/src/roots.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../api/node_modules/protobufjs/src/roots.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../api/node_modules/protobufjs/src/roots.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../api/node_modules/protobufjs/src/roots.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../api/node_modules/protobufjs/src/roots.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../api/node_modules/protobufjs/src/roots.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}}],"sources":{"../../api/node_modules/protobufjs/src/roots.js":"\"use strict\";\r\nmodule.exports = {};\r\n\r\n/**\r\n * Named roots.\r\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\r\n * Can also be used manually to make roots available accross modules.\r\n * @name roots\r\n * @type {Object.<string,Root>}\r\n * @example\r\n * // pbjs -r myroot -o compiled.js ...\r\n *\r\n * // in another module:\r\n * require(\"./compiled.js\");\r\n *\r\n * // in any subsequent module:\r\n * var root = protobuf.roots[\"myroot\"];\r\n */\r\n"},"lineCount":19}},"error":null,"hash":"4e95fc07c24a0a2f1c6591b52b3dc56b","cacheData":{"env":{}}}