{"id":"gql/mutation.js","dependencies":[{"name":"/home/mauricio/Documents/programming/javascript/js_everywhere/notedly/web/.babelrc","includedInParent":true,"mtime":1610226364784},{"name":"/home/mauricio/Documents/programming/javascript/js_everywhere/notedly/web/package.json","includedInParent":true,"mtime":1610226516384},{"name":"@apollo/client","loc":{"line":1,"column":20},"parent":"/home/mauricio/Documents/programming/javascript/js_everywhere/notedly/web/src/gql/mutation.js","resolved":"/home/mauricio/Documents/programming/javascript/js_everywhere/notedly/web/node_modules/@apollo/client/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NEW_NOTE = exports.EDIT_NOTE = void 0;\n\nvar _client = require(\"@apollo/client\");\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation NewNote($content: String!) {\\n        newNote(content: $content) {\\n            id\\n            content\\n            createdAt\\n            favoriteCount\\n            favoritedBy {\\n                id\\n                username\\n            }\\n            author {\\n                username\\n                id\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation UpdateNote($id: ID!, $content: String!) {\\n        updateNote(id: $id, content: $content) {\\n            id\\n            content\\n            createdAt\\n            favoriteCount\\n            favoritedBy {\\n                id\\n                username\\n            }\\n            author {\\n                id\\n                username\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nvar EDIT_NOTE = (0, _client.gql)(_templateObject());\nexports.EDIT_NOTE = EDIT_NOTE;\nvar NEW_NOTE = (0, _client.gql)(_templateObject2());\nexports.NEW_NOTE = NEW_NOTE;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"gql/mutation.js","original":{"line":1,"column":0}},{"generated":{"line":32,"column":0},"source":"gql/mutation.js","original":{"line":3,"column":0}},{"name":"EDIT_NOTE","generated":{"line":32,"column":4},"source":"gql/mutation.js","original":{"line":3,"column":6}},{"generated":{"line":32,"column":13},"source":"gql/mutation.js","original":{"line":3,"column":15}},{"name":"gql","generated":{"line":32,"column":20},"source":"gql/mutation.js","original":{"line":3,"column":18}},{"generated":{"line":32,"column":31},"source":"gql/mutation.js","original":{"line":3,"column":15}},{"generated":{"line":32,"column":51},"source":"gql/mutation.js","original":{"line":3,"column":0}},{"generated":{"line":34,"column":0},"source":"gql/mutation.js","original":{"line":22,"column":0}},{"name":"NEW_NOTE","generated":{"line":34,"column":4},"source":"gql/mutation.js","original":{"line":22,"column":6}},{"generated":{"line":34,"column":12},"source":"gql/mutation.js","original":{"line":22,"column":14}},{"name":"gql","generated":{"line":34,"column":19},"source":"gql/mutation.js","original":{"line":22,"column":17}},{"generated":{"line":34,"column":30},"source":"gql/mutation.js","original":{"line":22,"column":14}},{"generated":{"line":34,"column":51},"source":"gql/mutation.js","original":{"line":22,"column":0}}],"sources":{"gql/mutation.js":"import { gql } from '@apollo/client';\n\nconst EDIT_NOTE = gql`\n    mutation UpdateNote($id: ID!, $content: String!) {\n        updateNote(id: $id, content: $content) {\n            id\n            content\n            createdAt\n            favoriteCount\n            favoritedBy {\n                id\n                username\n            }\n            author {\n                id\n                username\n            }\n        }\n    }\n`;\n\nconst NEW_NOTE = gql`\n    mutation NewNote($content: String!) {\n        newNote(content: $content) {\n            id\n            content\n            createdAt\n            favoriteCount\n            favoritedBy {\n                id\n                username\n            }\n            author {\n                username\n                id\n            }\n        }\n    }\n`;\n\nexport {\n    EDIT_NOTE,\n    NEW_NOTE\n};"},"lineCount":null}},"error":null,"hash":"8beac1f14af268ccc140f3db8bdf780d","cacheData":{"env":{}}}