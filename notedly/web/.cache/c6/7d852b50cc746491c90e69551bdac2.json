{"id":"../../api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","dependencies":[{"name":"/home/mauricio/Documents/programming/javascript/js_everywhere/notedly/web/package.json","includedInParent":true,"mtime":1610226516384},{"name":"/home/mauricio/Documents/programming/javascript/js_everywhere/notedly/web/.babelrc","includedInParent":true,"mtime":1610226364784},{"name":"/home/mauricio/Documents/programming/javascript/js_everywhere/notedly/api/node_modules/mongoose/package.json","includedInParent":true,"mtime":1610085763124},{"name":"./SchemaTypeOptions","loc":{"line":3,"column":34},"parent":"/home/mauricio/Documents/programming/javascript/js_everywhere/notedly/api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","resolved":"/home/mauricio/Documents/programming/javascript/js_everywhere/notedly/api/node_modules/mongoose/lib/options/SchemaTypeOptions.js"},{"name":"./propertyOptions","loc":{"line":20,"column":21},"parent":"/home/mauricio/Documents/programming/javascript/js_everywhere/notedly/api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","resolved":"/home/mauricio/Documents/programming/javascript/js_everywhere/notedly/api/node_modules/mongoose/lib/options/propertyOptions.js"}],"generated":{"js":"'use strict';\n\nconst SchemaTypeOptions = require('./SchemaTypeOptions');\n/**\n * The options defined on an Document Array schematype.\n *\n * ####Example:\n *\n *     const schema = new Schema({ users: [{ name: string }] });\n *     schema.path('users').options; // SchemaDocumentArrayOptions instance\n *\n * @api public\n * @inherits SchemaTypeOptions\n * @constructor SchemaDocumentOptions\n */\n\n\nclass SchemaDocumentArrayOptions extends SchemaTypeOptions {}\n\nconst opts = require('./propertyOptions');\n/**\n * If `true`, Mongoose will skip building any indexes defined in this array's schema.\n * If not set, Mongoose will build all indexes defined in this array's schema.\n *\n * ####Example:\n *\n *     const childSchema = Schema({ name: { type: String, index: true } });\n *     // If `excludeIndexes` is `true`, Mongoose will skip building an index\n *     // on `arr.name`. Otherwise, Mongoose will build an index on `arr.name`.\n *     const parentSchema = Schema({\n *       arr: { type: [childSchema], excludeIndexes: true }\n *     });\n *\n * @api public\n * @property excludeIndexes\n * @memberOf SchemaDocumentArrayOptions\n * @type Array\n * @instance\n */\n\n\nObject.defineProperty(SchemaDocumentArrayOptions.prototype, 'excludeIndexes', opts);\n/*!\n * ignore\n */\n\nmodule.exports = SchemaDocumentArrayOptions;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"../../api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","original":{"line":1,"column":0}},{"generated":{"line":3,"column":0},"source":"../../api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","original":{"line":3,"column":0}},{"name":"SchemaTypeOptions","generated":{"line":3,"column":6},"source":"../../api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","original":{"line":3,"column":6}},{"generated":{"line":3,"column":23},"source":"../../api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","original":{"line":3,"column":23}},{"name":"require","generated":{"line":3,"column":26},"source":"../../api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","original":{"line":3,"column":26}},{"generated":{"line":3,"column":33},"source":"../../api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","original":{"line":3,"column":33}},{"generated":{"line":3,"column":34},"source":"../../api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","original":{"line":3,"column":34}},{"generated":{"line":3,"column":55},"source":"../../api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","original":{"line":3,"column":33}},{"generated":{"line":3,"column":56},"source":"../../api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","original":{"line":3,"column":0}},{"generated":{"line":4,"column":0},"source":"../../api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","original":{"line":5,"column":0}},{"generated":{"line":18,"column":0},"source":"../../api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","original":{"line":18,"column":0}},{"name":"SchemaDocumentArrayOptions","generated":{"line":18,"column":6},"source":"../../api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","original":{"line":18,"column":6}},{"generated":{"line":18,"column":32},"source":"../../api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","original":{"line":18,"column":0}},{"name":"SchemaTypeOptions","generated":{"line":18,"column":41},"source":"../../api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","original":{"line":18,"column":41}},{"generated":{"line":18,"column":58},"source":"../../api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","original":{"line":18,"column":0}},{"generated":{"line":18,"column":59},"source":"../../api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","original":{"line":18,"column":59}},{"generated":{"line":20,"column":0},"source":"../../api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","original":{"line":20,"column":0}},{"name":"opts","generated":{"line":20,"column":6},"source":"../../api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","original":{"line":20,"column":6}},{"generated":{"line":20,"column":10},"source":"../../api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","original":{"line":20,"column":10}},{"name":"require","generated":{"line":20,"column":13},"source":"../../api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","original":{"line":20,"column":13}},{"generated":{"line":20,"column":20},"source":"../../api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","original":{"line":20,"column":20}},{"generated":{"line":20,"column":21},"source":"../../api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","original":{"line":20,"column":21}},{"generated":{"line":20,"column":40},"source":"../../api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","original":{"line":20,"column":20}},{"generated":{"line":20,"column":41},"source":"../../api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","original":{"line":20,"column":0}},{"generated":{"line":21,"column":0},"source":"../../api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","original":{"line":22,"column":0}},{"name":"Object","generated":{"line":42,"column":0},"source":"../../api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","original":{"line":42,"column":0}},{"generated":{"line":42,"column":6},"source":"../../api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","original":{"line":42,"column":6}},{"name":"defineProperty","generated":{"line":42,"column":7},"source":"../../api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","original":{"line":42,"column":7}},{"generated":{"line":42,"column":21},"source":"../../api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","original":{"line":42,"column":0}},{"name":"SchemaDocumentArrayOptions","generated":{"line":42,"column":22},"source":"../../api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","original":{"line":42,"column":22}},{"generated":{"line":42,"column":48},"source":"../../api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","original":{"line":42,"column":48}},{"name":"prototype","generated":{"line":42,"column":49},"source":"../../api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","original":{"line":42,"column":49}},{"generated":{"line":42,"column":58},"source":"../../api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","original":{"line":42,"column":0}},{"generated":{"line":42,"column":60},"source":"../../api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","original":{"line":42,"column":60}},{"generated":{"line":42,"column":76},"source":"../../api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","original":{"line":42,"column":0}},{"name":"opts","generated":{"line":42,"column":78},"source":"../../api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","original":{"line":42,"column":78}},{"generated":{"line":42,"column":82},"source":"../../api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","original":{"line":42,"column":0}},{"generated":{"line":43,"column":0},"source":"../../api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","original":{"line":44,"column":0}},{"name":"module","generated":{"line":47,"column":0},"source":"../../api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","original":{"line":48,"column":0}},{"generated":{"line":47,"column":6},"source":"../../api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","original":{"line":48,"column":6}},{"name":"exports","generated":{"line":47,"column":7},"source":"../../api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","original":{"line":48,"column":7}},{"generated":{"line":47,"column":14},"source":"../../api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","original":{"line":48,"column":0}},{"name":"SchemaDocumentArrayOptions","generated":{"line":47,"column":17},"source":"../../api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","original":{"line":48,"column":17}},{"generated":{"line":47,"column":43},"source":"../../api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js","original":{"line":48,"column":0}}],"sources":{"../../api/node_modules/mongoose/lib/options/SchemaDocumentArrayOptions.js":"'use strict';\n\nconst SchemaTypeOptions = require('./SchemaTypeOptions');\n\n/**\n * The options defined on an Document Array schematype.\n *\n * ####Example:\n *\n *     const schema = new Schema({ users: [{ name: string }] });\n *     schema.path('users').options; // SchemaDocumentArrayOptions instance\n *\n * @api public\n * @inherits SchemaTypeOptions\n * @constructor SchemaDocumentOptions\n */\n\nclass SchemaDocumentArrayOptions extends SchemaTypeOptions {}\n\nconst opts = require('./propertyOptions');\n\n/**\n * If `true`, Mongoose will skip building any indexes defined in this array's schema.\n * If not set, Mongoose will build all indexes defined in this array's schema.\n *\n * ####Example:\n *\n *     const childSchema = Schema({ name: { type: String, index: true } });\n *     // If `excludeIndexes` is `true`, Mongoose will skip building an index\n *     // on `arr.name`. Otherwise, Mongoose will build an index on `arr.name`.\n *     const parentSchema = Schema({\n *       arr: { type: [childSchema], excludeIndexes: true }\n *     });\n *\n * @api public\n * @property excludeIndexes\n * @memberOf SchemaDocumentArrayOptions\n * @type Array\n * @instance\n */\n\nObject.defineProperty(SchemaDocumentArrayOptions.prototype, 'excludeIndexes', opts);\n\n/*!\n * ignore\n */\n\nmodule.exports = SchemaDocumentArrayOptions;"},"lineCount":null}},"error":null,"hash":"8d4589e620a7e4cf8767cc5b109dae83","cacheData":{"env":{}}}